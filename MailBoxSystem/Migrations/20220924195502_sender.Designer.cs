// <auto-generated />
using System;
using MailBoxSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MailBoxSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220924195502_sender")]
    partial class sender
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MailBoxSystem.Models.Box", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Boxes");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Box");
                });

            modelBuilder.Entity("MailBoxSystem.Models.LetterBoxStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BoxId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeliverTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PullTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BoxId");

                    b.ToTable("LetterBoxStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BoxId = 1,
                            DeliverTime = new DateTime(2022, 9, 23, 22, 55, 1, 17, DateTimeKind.Local).AddTicks(6005)
                        });
                });

            modelBuilder.Entity("MailBoxSystem.Models.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BoxId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeliverTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PullTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecieverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecieverPhone")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoxId");

                    b.HasIndex("SenderId");

                    b.ToTable("Packages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BoxId = 2,
                            Code = "R1234",
                            CreatedDate = new DateTime(2022, 9, 24, 22, 55, 1, 17, DateTimeKind.Local).AddTicks(6110),
                            DeliverTime = new DateTime(2022, 9, 24, 21, 55, 1, 17, DateTimeKind.Local).AddTicks(6119),
                            RecieverName = "יהודה",
                            RecieverPhone = 535481815,
                            SenderId = 1
                        });
                });

            modelBuilder.Entity("MailBoxSystem.Models.PackageSender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("IconName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PackageSenders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IconName = "aliexpress.jpg",
                            Name = "Ali Express"
                        });
                });

            modelBuilder.Entity("MailBoxSystem.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("TempToken")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EMail = "ye.altman@gmail.com",
                            Name = "Yehudah",
                            Password = "1234",
                            PhoneNumber = 535481815
                        });
                });

            modelBuilder.Entity("MailBoxSystem.Models.LetterBox", b =>
                {
                    b.HasBaseType("MailBoxSystem.Models.Box");

                    b.Property<string>("Line1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.HasIndex("OwnerId");

                    b.HasDiscriminator().HasValue("L");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocalId = "01",
                            Line1 = "אלטמן",
                            Line2 = "קומה 1",
                            OwnerId = 1
                        });
                });

            modelBuilder.Entity("MailBoxSystem.Models.PackageBox", b =>
                {
                    b.HasBaseType("MailBoxSystem.Models.Box");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("P");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            LocalId = "01",
                            Size = 2
                        });
                });

            modelBuilder.Entity("MailBoxSystem.Models.LetterBoxStatus", b =>
                {
                    b.HasOne("MailBoxSystem.Models.LetterBox", "Box")
                        .WithMany()
                        .HasForeignKey("BoxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Box");
                });

            modelBuilder.Entity("MailBoxSystem.Models.Package", b =>
                {
                    b.HasOne("MailBoxSystem.Models.PackageBox", "Box")
                        .WithMany()
                        .HasForeignKey("BoxId");

                    b.HasOne("MailBoxSystem.Models.PackageSender", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Box");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("MailBoxSystem.Models.LetterBox", b =>
                {
                    b.HasOne("MailBoxSystem.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });
#pragma warning restore 612, 618
        }
    }
}
